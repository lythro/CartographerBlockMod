// Date: 29.09.2014 23:23:25
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX



package limette.CartoBlock;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class CartographerBlockModel extends ModelBase
{
  //fields
    ModelRenderer tablebase;
    ModelRenderer map;
    ModelRenderer FrontLeftStick;
    ModelRenderer FrontRightStick;
    ModelRenderer BackLeftStick;
    ModelRenderer BackRightStick;
    ModelRenderer FrontLeftEye;
    ModelRenderer FrontRightEye;
    ModelRenderer BackRightEye;
    ModelRenderer BackLeftEye;
  
  public CartographerBlockModel()
  {
    textureWidth = 64;
    textureHeight = 64;
    
      tablebase = new ModelRenderer(this, 0, 0);
      tablebase.addBox(0F, 0F, 0F, 15, 11, 15);
      tablebase.setRotationPoint(-7.5F, 13F, -7.5F);
      tablebase.setTextureSize(128, 128);
      tablebase.mirror = true;
      setRotation(tablebase, 0F, 0F, 0F);
      
      map = new ModelRenderer(this, 0, 26);
      map.addBox(0F, 0F, 0F, 7, 1, 7);
      map.setRotationPoint(-3.5F, 12.5F, -3.5F);
      map.setTextureSize(128, 128);
      map.mirror = true;
      setRotation(map, 0F, 0F, 0F);
      
      FrontLeftStick = new ModelRenderer(this, 0, 0);
      FrontLeftStick.addBox(-1F, -5F, 0F, 1, 5, 1);
      FrontLeftStick.setRotationPoint(7F, 13F, -7F);
      FrontLeftStick.setTextureSize(128, 128);
      FrontLeftStick.mirror = true;
      setRotation(FrontLeftStick, 0F, 0F, 0F);
      
      FrontRightStick = new ModelRenderer(this, 0, 0);
      FrontRightStick.addBox(0F, -5F, 0F, 1, 5, 1);
      FrontRightStick.setRotationPoint(-7F, 13F, -7F);
      FrontRightStick.setTextureSize(128, 128);
      FrontRightStick.mirror = true;
      setRotation(FrontRightStick, 0F, 0F, 0F);
      
      BackLeftStick = new ModelRenderer(this, 0, 0);
      BackLeftStick.addBox(-1F, -5F, -1F, 1, 5, 1);
      BackLeftStick.setRotationPoint(7F, 13F, 7F);
      BackLeftStick.setTextureSize(128, 128);
      BackLeftStick.mirror = true;
      setRotation(BackLeftStick, 0F, 0F, 0F);
      
      BackRightStick = new ModelRenderer(this, 0, 0);
      BackRightStick.addBox(0F, -5F, -1F, 1, 5, 1);
      BackRightStick.setRotationPoint(-7F, 13F, 7F);
      BackRightStick.setTextureSize(128, 128);
      BackRightStick.mirror = true;
      setRotation(BackRightStick, 0F, 0F, 0F);
      
      FrontLeftEye = new ModelRenderer(this, 6, 0);
      FrontLeftEye.addBox(-1F, -2F, -1.2F, 2, 2, 1);
      FrontLeftEye.setRotationPoint(6F, 8F, -6F);
      FrontLeftEye.setTextureSize(128, 128);
      FrontLeftEye.mirror = true;
      setRotation(FrontLeftEye, 0F, -0.7853982F, 0F);
      
      FrontRightEye = new ModelRenderer(this, 6, 0);
      FrontRightEye.addBox(-1F, -2F, -1.2F, 2, 2, 1);
      FrontRightEye.setRotationPoint(-6F, 8F, -6F);
      FrontRightEye.setTextureSize(128, 128);
      FrontRightEye.mirror = true;
      setRotation(FrontRightEye, 0F, 0.7853982F, 0F);
      
      BackRightEye = new ModelRenderer(this, 6, 0);
      BackRightEye.addBox(-1F, -2F, -1.2F, 2, 2, 1);
      BackRightEye.setRotationPoint(-6F, 8F, 6F);
      BackRightEye.setTextureSize(128, 128);
      BackRightEye.mirror = true;
      setRotation(BackRightEye, 0F, 2.356194F, 0F);
      
      BackLeftEye = new ModelRenderer(this, 6, 0);
      BackLeftEye.addBox(-1F, -2F, -1.2F, 2, 2, 1);
      BackLeftEye.setRotationPoint(6F, 8F, 6F);
      BackLeftEye.setTextureSize(128, 128);
      BackLeftEye.mirror = true;
      setRotation(BackLeftEye, 0F, 3.926991F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    tablebase.render(f5);
    map.render(f5);
    FrontLeftStick.render(f5);
    FrontRightStick.render(f5);
    BackLeftStick.render(f5);
    BackRightStick.render(f5);
    FrontLeftEye.render(f5);
    FrontRightEye.render(f5);
    BackRightEye.render(f5);
    BackLeftEye.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
